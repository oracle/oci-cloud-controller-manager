box: iad.ocir.io/spinnaker/oci-kube-ci:1.0.3
no-response-timeout: 30
command-timeout: 30

#============================================
# New cloud-provider-oci build pipeline
#============================================

build:
  base-path: "/go/src/github.com/oracle/oci-cloud-controller-manager"
  steps:
    - script:
      name: check boilerplate
      code: ./hack/verify-boilerplate.sh

    - script:
      name: go fmt
      code: make gofmt

    - script:
      name: golint
      code: |
        make golint

    - script:
      name: go vet
      code: make govet

    - script:
      name: unit tests
      code: make test

    - script:
      name: Build binaries
      code: make build

    - script:
      name: Template manifests
      code: make manifests

    - script:
        name: Write VERSION.txt
        code: |
          echo "$(make version)" > VERSION.txt

publish-docker-image:
  box: alpine
  docker: true
  steps:
    - script:
        name: Set ENV vars
        code: |
          export IMAGE="iad.ocir.io/spinnaker/cloud-provider-oci"
          export VERSION=$(cat VERSION.txt)
          echo "${VERSION}"

    - script:
        name: Install docker
        code: apk --no-cache add docker

    - script:
        name: Docker login
        code: docker login iad.ocir.io -u $OCIRUSERNAME -p "$OCIRPASSWORD"

    - script:
        name: Build cloud-provider-oci Dockerfile
        code: docker build -t ${IMAGE}:${VERSION} .

    - script:
        name: Push image
        code: docker push ${IMAGE}:${VERSION}

ccm-e2e-test:
  base-path: "/go/src/github.com/oracle/oci-cloud-controller-manager"
  steps:
    - script:
      name: set ENV vars
      code: |
        export VERSION=$(make version)
        echo "${VERSION}"
        export NODEPORT_TEST="true"
        export CCM_SECLIST_ID="ocid1.securitylist.oc1.iad.aaaaaaaagekgnvc75yxb66xj2qgocejhyk5xuhojm6wimmteqa5fj43kk5lq"
        export K8S_SECLIST_ID="ocid1.securitylist.oc1.iad.aaaaaaaajzgrgfma2xzzdv4erczaiphuyaflazbt2bvzw2cwj2pxo3fygo5a"

    - script:
      name: deploy latest CCM
      code: make upgrade

    - script:
      name: e2e default tests
      code: make e2e

  after-steps:
    - script:
      name: rollback original CCM
      code: make rollback

volume-provisioner-e2e-test:
  base-path: "/go/src/github.com/oracle/oci-cloud-controller-manager"
  steps:
    - script:
      name: Run volume provisioner E2E tests
      code: |
        echo "Running volume provisioner E2E tests"

release:
  box:
    id: oraclelinux:7-slim
  steps:

    - script:
        name: set ENV vars
        code: |
          export VERSION=$(cat VERSION.txt)
          echo "${VERSION}"

    - script:
        name: Ensure version is unique
        code: |
          if curl -s https://api.github.com/repos/oracle/oci-cloud-controller-manager/git/refs/tags | grep "tags/$VERSION"; then
            echo "Tag $VERSION already exists. Doing nothing."
            exit 1
          fi

    - github-create-release:
      token: $GITHUB_TOKEN
      tag: $VERSION
      title: $VERSION
      draft: false

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./oci-cloud-controller-manager.yaml
      filename: oci-cloud-controller-manager.yaml
      content-type: text/yaml

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./oci-cloud-controller-manager-rbac.yaml
      filename: oci-cloud-controller-manager-rbac.yaml
      content-type: text/yaml
