box: golang:1.9
dev:
  steps:
    - internal/shell
build:
  base-path: "/go/src/github.com/oracle/oci-cloud-controller-manager"
  steps:

    - script:
      name: check boilerplate
      code: ./hack/verify-boilerplate.sh

    - script:
      name: go fmt
      code: make gofmt

    - script:
      name: golint
      code: |
        go get -u github.com/golang/lint/golint
        make golint

    - script:
      name: go vet
      code: make govet

    - script:
      name: unit tests
      code: make test

    - script:
      name: build
      code: make build

    - script:
      name: manifests
      code: make manifests

    - script:
      name: write VERSION.txt
      code: |
        make version > dist/VERSION.txt
        cat dist/VERSION.txt

copy:
  steps:
    - script:
      name: copy output
      code: |
        cp -a dist/* ${WERCKER_OUTPUT_DIR}

push:
  box:
    id: oraclelinux:7-slim
  steps:
    - script:
        name: set ENV vars
        code: |
          export VERSION=$(cat VERSION.txt)
          echo "${VERSION}"

    - script:
        name: Ensure version is unique
        code: |
          if curl -s https://api.github.com/repos/oracle/oci-cloud-controller-manager/git/refs/tags | grep "tags/$VERSION"; then
            echo "Tag $VERSION already exists. Doing nothing."
            exit 1
          fi

    - script:
        name: prepare
        code: |
          mv ./oci-cloud-controller-manager /oci-cloud-controller-manager
          chmod +x /oci-cloud-controller-manager

    - internal/docker-push:
        repository: iad.ocir.io/oracle/oci-cloud-controller-manager
        tag: $VERSION
        entrypoint: /oci-cloud-controller-manager
        user: 65534 # nobody
        registry: https://iad.ocir.io/v2
        username: $OCIRUSERNAME
        password: $OCIRPASSWORD

    - internal/docker-push:
        repository: lhr.ocir.io/oracle/oci-cloud-controller-manager
        tag: $VERSION
        entrypoint: /oci-cloud-controller-manager
        user: 65534 # nobody
        registry: https://lhr.ocir.io/v2
        username: $OCIRUSERNAME
        password: $OCIRPASSWORD

    - internal/docker-push:
        repository: phx.ocir.io/oracle/oci-cloud-controller-manager
        tag: $VERSION
        entrypoint: /oci-cloud-controller-manager
        user: 65534 # nobody
        registry: https://phx.ocir.io/v2
        username: $OCIRUSERNAME
        password: $OCIRPASSWORD

    - internal/docker-push:
        repository: fra.ocir.io/oracle/oci-cloud-controller-manager
        tag: $VERSION
        entrypoint: /oci-cloud-controller-manager
        user: 65534 # nobody
        registry: https://fra.ocir.io/v2
        username: $OCIRUSERNAME
        password: $OCIRPASSWORD

release:
  box:
    id: oraclelinux:7-slim
  steps:
    - script:
        name: set ENV vars
        code: |
          export VERSION=$(cat VERSION.txt)
          echo "${VERSION}"

    - script:
        name: Ensure version is unique
        code: |
          if curl -s https://api.github.com/repos/oracle/oci-cloud-controller-manager/git/refs/tags | grep "tags/$VERSION"; then
            echo "Tag $VERSION already exists. Doing nothing."
            exit 1
          fi

    - github-create-release:
      token: $GITHUB_TOKEN
      tag: $VERSION
      title: $VERSION
      draft: false

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./oci-cloud-controller-manager.yaml
      filename: oci-cloud-controller-manager.yaml
      content-type: text/yaml

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./oci-cloud-controller-manager-rbac.yaml
      filename: oci-cloud-controller-manager-rbac.yaml
      content-type: text/yaml
